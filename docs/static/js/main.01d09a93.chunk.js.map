{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","url","title","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","imag","key","GitExpert","props","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAWhD,OACE,oCACE,0BAAMC,SARW,SAAAC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,SAMpC,2BAAOC,KAAK,OAAOC,MAAOT,EAAYU,SAZlB,SAAAP,GACxBF,EAAcE,EAAEQ,OAAOF,aCKZG,MATf,YAAyC,EAAlBC,GAAmB,IAAfC,EAAc,EAAdA,IAAKC,EAAS,EAATA,MAC9B,OACE,yBAAKC,UAAU,2CACb,yBAAKC,IAAKH,EAAKI,IAAKH,IACpB,2BAAIA,K,uBCNGI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfP,EADe,iDACiCQ,UACpDF,GAFmB,+DAIFG,MAAMT,GAJJ,cAIfU,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLhB,GAAIgB,EAAIhB,GACRE,MAAOc,EAAId,MACXD,IAAKe,EAAIC,OAAOC,iBAAiBjB,QAXhB,kBAeda,GAfc,4CAAH,sDCqBLK,MAhBf,YAAgC,IAAbZ,EAAY,EAAZA,SAAY,ECFH,SAAAA,GAAa,IAAD,EACZrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAH2B,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAXAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAAAC,GACrBC,YAAW,WACTJ,EAAS,CACPT,KAAMY,EACNL,SAAS,MAEV,SAEJ,CAACb,IAEGc,EDbmBM,CAAapB,GAA/BM,EADqB,EACrBA,KAAMO,EADe,EACfA,QAEd,OACE,oCACE,4BAAKb,GACJa,GAAW,yCACZ,yBAAKjB,UAAU,aACZU,EAAKE,KAAI,SAAAa,GAAI,OACZ,kBAAC,EAAD,eAAaC,IAAKD,EAAK5B,IAAQ4B,UEU1BE,MApBf,SAAmBC,GAAQ,IAAD,EACY7C,mBAAS,CAAC,cADtB,mBACjB8C,EADiB,KACL/C,EADK,KAGxB,OACE,oCACE,wBAAIkB,UAAU,oEAAd,aAGA,kBAAC,EAAD,CAAalB,cAAeA,IAC5B,6BAEA,4BACG+C,EAAWjB,KAAI,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CAASsB,IAAKtB,EAAUA,SAAUA,UCX5C0B,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,U","file":"static/js/main.01d09a93.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats]);\n    }\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n      </form>\n    </>\n  );\n};\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n","import React from \"react\";\n\nfunction GifGridItem({ id, url, title }) {\n  return (\n    <div className=\"card animate__animated animate__bounce \">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n\nexport default GifGridItem;\n","export const getGifs = async category => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=a6BKz32bPzjMQuoh7Gn2wdwPCk5jBXPD`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    };\n  });\n\n  return gifs;\n};\n","import React from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport { getGifs } from \"../helpers/getGifs\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { CardGroup } from \"react-bootstrap\";\nfunction GifGrid({ category }) {\n  const { data, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <p>Loading...</p>}\n      <div className=\"card-grid\">\n        {data.map(imag => (\n          <GifGridItem key={imag.id} {...imag} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n  useEffect(() => {\n    getGifs(category).then(imgs => {\n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loading: false\n        });\n      }, 30);\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nfunction GitExpert(props) {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n  //const handleAdd = () => {}\n  return (\n    <>\n      <h1 className=\"titles animate__animated animate__bounceInLeft animate__delay-1s\">\n        GIF Mania\n      </h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map(category => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n}\n\nexport default GitExpert;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport GitExpert from \"./GitExpert\";\n\nReactDOM.render(<GitExpert />, document.getElementById(\"root\"));\n"],"sourceRoot":""}